subprojects {
    apply plugin: 'signing'
    apply plugin: 'maven'
    apply plugin: 'java'

    group = 'no.entitas.gradle.jaxb'
    version = '2.0'

    repositories {
        mavenCentral()
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

/*
task integrationTest(type: GradleBuild, dependsOn: build) {
    dir = 'src/sample'
    tasks = ['clean', 'build']
}
*/

    signing {
        required = { gradle.taskGraph.hasTask("uploadArchives") && !version.endsWith("SNAPSHOT") }
        sign configurations.archives
    }

    defaultProject = {
        name 'Gradle JAXB plugin'
        // packaging 'jar' (Packaging is set later through direct modification of the xml)
        description 'The Gradle JAXB plugin creates Java classes from XSD schemas.'
        url 'http://github.com/stianh/gradle-jaxb-plugin'
        inceptionYear '2011'

        scm {
            developerConnection 'git@github.com:stianh/gradle-jaxb-plugin.git'
            connection 'git://github.com/stianh/gradle-jaxb-plugin.git'
            url 'https://github.com/stianh/gradle-jaxb-plugin'
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'stianh'
                name 'Stian Hegglund'
                email 'stian.hegglund@gmail.com'
                roles {
                    role 'Developer'
                }
                timezone '+1'
            }
            developer {
                id 'stigkj'
                name 'Stig Kleppe-JÃ¸rgensen'
                email 'from.gradle-jaxb@nisgits.net'
                roles {
                    role 'Developer'
                }
                timezone '+1'
            }
        }
    }

// TODO is this really needed? Think Sonatype do not have this as mandatory anymore
    fixedProject = {
        project defaultProject
        withXml {
            def project = it.asNode()
            project.version[0] + {
                packaging 'jar'
            }
        }
    }

    install.repositories.mavenInstaller {
        pom fixedProject

        beforeDeployment {
            deployment -> signing.signPom(deployment)
        }
    }

    uploadArchives.repositories.mavenDeployer {
        pom fixedProject
        uniqueVersion = false

        beforeDeployment {
            deployment -> signing.signPom(deployment)
        }

        if (!project.hasProperty('sonatypeUsername')) sonatypeUsername = ''
        if (!project.hasProperty('sonatypePassword')) sonatypePassword = ''

        snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
            authentication(userName: sonatypeUsername, password: sonatypePassword)
        }

        repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
            authentication(userName: sonatypeUsername, password: sonatypePassword)
        }
    }
}
